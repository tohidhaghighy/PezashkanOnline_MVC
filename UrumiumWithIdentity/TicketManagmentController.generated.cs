// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace UrumiumWithIdentity.Controllers
{
    public partial class TicketManagmentController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected TicketManagmentController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Answer()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Answer);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> TicketChatroom()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TicketChatroom);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public TicketManagmentController Actions { get { return MVC.TicketManagment; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "TicketManagment";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "TicketManagment";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string Answer = "Answer";
            public readonly string TicketChatroom = "TicketChatroom";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string Answer = "Answer";
            public const string TicketChatroom = "TicketChatroom";
        }


        static readonly ActionParamsClass_Answer s_params_Answer = new ActionParamsClass_Answer();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Answer AnswerParams { get { return s_params_Answer; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Answer
        {
            public readonly string Text = "Text";
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_TicketChatroom s_params_TicketChatroom = new ActionParamsClass_TicketChatroom();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_TicketChatroom TicketChatroomParams { get { return s_params_TicketChatroom; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_TicketChatroom
        {
            public readonly string ticketid = "ticketid";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _Create = "_Create";
                public readonly string _FileList = "_FileList";
                public readonly string _ListAjax = "_ListAjax";
                public readonly string _ListItem = "_ListItem";
                public readonly string _Search = "_Search";
                public readonly string _TicketAllChat = "_TicketAllChat";
                public readonly string _TicketSeenAndAnswerFinish = "_TicketSeenAndAnswerFinish";
                public readonly string _TicketUnSeenCount = "_TicketUnSeenCount";
                public readonly string Index = "Index";
                public readonly string TicketChatroom = "TicketChatroom";
            }
            public readonly string _Create = "~/Views/TicketManagment/_Create.cshtml";
            public readonly string _FileList = "~/Views/TicketManagment/_FileList.cshtml";
            public readonly string _ListAjax = "~/Views/TicketManagment/_ListAjax.cshtml";
            public readonly string _ListItem = "~/Views/TicketManagment/_ListItem.cshtml";
            public readonly string _Search = "~/Views/TicketManagment/_Search.cshtml";
            public readonly string _TicketAllChat = "~/Views/TicketManagment/_TicketAllChat.cshtml";
            public readonly string _TicketSeenAndAnswerFinish = "~/Views/TicketManagment/_TicketSeenAndAnswerFinish.cshtml";
            public readonly string _TicketUnSeenCount = "~/Views/TicketManagment/_TicketUnSeenCount.cshtml";
            public readonly string Index = "~/Views/TicketManagment/Index.cshtml";
            public readonly string TicketChatroom = "~/Views/TicketManagment/TicketChatroom.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_TicketManagmentController : UrumiumWithIdentity.Controllers.TicketManagmentController
    {
        public T4MVC_TicketManagmentController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

        [NonAction]
        partial void AnswerOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string Text, string id);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Answer(string Text, string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Answer);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Text", Text);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            AnswerOverride(callInfo, Text, id);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

        [NonAction]
        partial void TicketChatroomOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int ticketid);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> TicketChatroom(int ticketid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TicketChatroom);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ticketid", ticketid);
            TicketChatroomOverride(callInfo, ticketid);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
