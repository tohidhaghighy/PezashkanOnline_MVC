// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace UrumiumWithIdentity.Controllers
{
    public partial class JVTimeController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected JVTimeController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> IllnessJudgeVisit()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.IllnessJudgeVisit);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> AddVisitJudgePayment()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddVisitJudgePayment);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> ReturnVisitPayment()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReturnVisitPayment);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public JVTimeController Actions { get { return MVC.JVTime; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "JVTime";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "JVTime";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string IllnessJudgeVisit = "IllnessJudgeVisit";
            public readonly string AddVisitJudgePayment = "AddVisitJudgePayment";
            public readonly string ReturnVisitPayment = "ReturnVisitPayment";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string IllnessJudgeVisit = "IllnessJudgeVisit";
            public const string AddVisitJudgePayment = "AddVisitJudgePayment";
            public const string ReturnVisitPayment = "ReturnVisitPayment";
        }


        static readonly ActionParamsClass_IllnessJudgeVisit s_params_IllnessJudgeVisit = new ActionParamsClass_IllnessJudgeVisit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_IllnessJudgeVisit IllnessJudgeVisitParams { get { return s_params_IllnessJudgeVisit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_IllnessJudgeVisit
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_AddVisitJudgePayment s_params_AddVisitJudgePayment = new ActionParamsClass_AddVisitJudgePayment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddVisitJudgePayment AddVisitJudgePaymentParams { get { return s_params_AddVisitJudgePayment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddVisitJudgePayment
        {
            public readonly string illnessid = "illnessid";
            public readonly string amount = "amount";
        }
        static readonly ActionParamsClass_ReturnVisitPayment s_params_ReturnVisitPayment = new ActionParamsClass_ReturnVisitPayment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ReturnVisitPayment ReturnVisitPaymentParams { get { return s_params_ReturnVisitPayment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ReturnVisitPayment
        {
            public readonly string Vresult = "Vresult";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string IllnessJudgeVisit = "IllnessJudgeVisit";
                public readonly string ReturnVisitPayment = "ReturnVisitPayment";
            }
            public readonly string IllnessJudgeVisit = "~/Views/JVTime/IllnessJudgeVisit.cshtml";
            public readonly string ReturnVisitPayment = "~/Views/JVTime/ReturnVisitPayment.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_JVTimeController : UrumiumWithIdentity.Controllers.JVTimeController
    {
        public T4MVC_JVTimeController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IllnessJudgeVisitOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> IllnessJudgeVisit(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.IllnessJudgeVisit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            IllnessJudgeVisitOverride(callInfo, id);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

        [NonAction]
        partial void AddVisitJudgePaymentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string illnessid, string amount);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> AddVisitJudgePayment(string illnessid, string amount)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddVisitJudgePayment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "illnessid", illnessid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "amount", amount);
            AddVisitJudgePaymentOverride(callInfo, illnessid, amount);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

        [NonAction]
        partial void ReturnVisitPaymentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, UrumiumWithIdentity.Models.VerifyResultPayment Vresult);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> ReturnVisitPayment(UrumiumWithIdentity.Models.VerifyResultPayment Vresult)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReturnVisitPayment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Vresult", Vresult);
            ReturnVisitPaymentOverride(callInfo, Vresult);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
