@using Microsoft.AspNet.Identity;
@using UrumiumMVC.Common.TimeConverter;
@model List<UrumiumMVC.DomainClasses.Entities.Ticket.Ticket>

@{
    Layout = "~/Views/Shared/_ManagmentLayout.cshtml";
}

@{
    Converter newconvert = new Converter();
}

<link href="~/Content/Common/alert/sweetalert.css" rel="stylesheet" />
@section Scripts
{
   
    <script src="~/Content/Common/alert/sweetalert.min.js"></script>
}

<link href="~/Content/Common/chatroom/chatstyle.css" rel="stylesheet" />
<div class="container" style="direction:ltr;">
    <h3 class=" text-center">ارسال پیام</h3>
    <div class="messaging">
        <div class="inbox_msg">
            <div class="inbox_people">
                <div class="headind_srch">
                    
                </div>
                <div class="inbox_chat">
                    <div class="chat_list active_chat">
                        <div class="chat_people">
                            <div class="chat_img"> <img src="~/Content/Managment/dist/img/avatar5.png" alt="sunil"/> </div>
                            <div class="chat_ib">
                                <h5>@Model[Model.Count() - 1].Name <span class="time_date">@newconvert.GetPersianDate(Model[0].Datetime)</span></h5>
                                <p>
                                   @Model[0].Text 
                                </p>
                            </div>
                        </div>
                    </div>
                   
                </div>
            </div>
            <div class="mesgs">
                <div class="msg_history">
                    @{
                        foreach (var item in Model)
                        {
                            if (item.UserRoll == "user")
                            {
                                <div class="incoming_msg">
                                    <div class="incoming_msg_img"> <img src="~/Content/Managment/dist/img/avatar5.png" alt="sunil" /> </div>
                                    <div class="received_msg">
                                        <div class="received_withd_msg">
                                            <p>
                                                @item.Text
                                            </p>
                                            <span class="time_date">
                                            @newconvert.GetPersianDate(item.Datetime)</span>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="outgoing_msg">
                                    <div class="sent_msg">
                                        <p>
                                            @item.Text
                                        </p>
                                        <span class="time_date">
                                            @newconvert.GetPersianDate(item.Datetime)
                                        </span>
                                    </div>
                                </div>
                            }
                        }
                    }
                    
                   
                </div>
                <div class="type_msg">
                    <div class="input_msg_write">
                        <input type="text" id="txtmassage" class="write_msg" placeholder="Type a message" />
                        <a class="msg_send_btn" onclick="sendmassege(@Model[Model.Count() - 1].Id,'@User.Identity.GetUserId()','@User.Identity.GetUserName()')"><i class="fa fa-paper-plane-o" aria-hidden="true" style="margin-top:5px;margin-left:5px;"></i></a>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>


<script>




    function sendmassege(ticketid, userid, username) {
        var txt = $("#txtmassage").val();
        if (txt != "") {
            swal({
                title: "آیا میخواهید ارسال شود؟",
                text: "",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "بله",
                cancelButtonText: "خیر",
                closeOnConfirm: false,
                closeOnCancel: false
            },
                function (isConfirm) {
                    if (isConfirm) {
                        sendmassagetoserver(ticketid, txt,userid,username);

                    } else {
                        swal("صرف نظر", "ارسال نشد", "error");
                    }
                });
        }
        else {
            alert("نباید خالی باشد");
        }

    }


    function sendmassagetoserver(ticketsendid, text,userid,username) {
        $.ajax({
            type: "Post",
            url: '/TicketManagment/SendTicket',
            data: { ticketid: ticketsendid, text: text, userid: userid, username: username },
            success: function (data) {
                location.reload(true);
            }
        });

    }

</script>